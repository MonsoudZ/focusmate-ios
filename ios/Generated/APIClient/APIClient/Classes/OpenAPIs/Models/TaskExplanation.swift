//
// TaskExplanation.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public struct TaskExplanation: Codable, JSONEncodable, Hashable {
    public var id: Int
    public var itemId: Int
    public var userId: Int
    public var explanationType: String
    public var notes: String?
    public var createdAt: Date

    public init(id: Int, itemId: Int, userId: Int, explanationType: String, notes: String? = nil, createdAt: Date) {
        self.id = id
        self.itemId = itemId
        self.userId = userId
        self.explanationType = explanationType
        self.notes = notes
        self.createdAt = createdAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case itemId = "item_id"
        case userId = "user_id"
        case explanationType = "explanation_type"
        case notes
        case createdAt = "created_at"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(itemId, forKey: .itemId)
        try container.encode(userId, forKey: .userId)
        try container.encode(explanationType, forKey: .explanationType)
        try container.encodeIfPresent(notes, forKey: .notes)
        try container.encode(createdAt, forKey: .createdAt)
    }
}

@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension TaskExplanation: Identifiable {}
