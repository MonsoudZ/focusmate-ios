//
// DeviceRegistrationResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public struct DeviceRegistrationResponse: Codable, JSONEncodable, Hashable {
    public var id: Int
    public var deviceId: String
    public var platform: String
    public var createdAt: Date

    public init(id: Int, deviceId: String, platform: String, createdAt: Date) {
        self.id = id
        self.deviceId = deviceId
        self.platform = platform
        self.createdAt = createdAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case deviceId = "device_id"
        case platform
        case createdAt = "created_at"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(deviceId, forKey: .deviceId)
        try container.encode(platform, forKey: .platform)
        try container.encode(createdAt, forKey: .createdAt)
    }
}

@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension DeviceRegistrationResponse: Identifiable {}
