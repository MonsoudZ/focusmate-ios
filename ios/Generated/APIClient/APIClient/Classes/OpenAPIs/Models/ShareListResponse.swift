//
// ShareListResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public struct ShareListResponse: Codable, JSONEncodable, Hashable {
    public var id: Int
    public var listId: Int
    public var email: String
    public var role: String
    public var status: String
    public var invitationToken: String
    public var user: UserDTO?
    public var permissions: SharePermissions
    public var invitedAt: Date
    public var acceptedAt: Date?
    public var createdAt: Date
    public var updatedAt: Date

    public init(id: Int, listId: Int, email: String, role: String, status: String, invitationToken: String, user: UserDTO? = nil, permissions: SharePermissions, invitedAt: Date, acceptedAt: Date? = nil, createdAt: Date, updatedAt: Date) {
        self.id = id
        self.listId = listId
        self.email = email
        self.role = role
        self.status = status
        self.invitationToken = invitationToken
        self.user = user
        self.permissions = permissions
        self.invitedAt = invitedAt
        self.acceptedAt = acceptedAt
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case listId = "list_id"
        case email
        case role
        case status
        case invitationToken = "invitation_token"
        case user
        case permissions
        case invitedAt = "invited_at"
        case acceptedAt = "accepted_at"
        case createdAt = "created_at"
        case updatedAt = "updated_at"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(listId, forKey: .listId)
        try container.encode(email, forKey: .email)
        try container.encode(role, forKey: .role)
        try container.encode(status, forKey: .status)
        try container.encode(invitationToken, forKey: .invitationToken)
        try container.encodeIfPresent(user, forKey: .user)
        try container.encode(permissions, forKey: .permissions)
        try container.encode(invitedAt, forKey: .invitedAt)
        try container.encodeIfPresent(acceptedAt, forKey: .acceptedAt)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(updatedAt, forKey: .updatedAt)
    }
}

@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ShareListResponse: Identifiable {}
