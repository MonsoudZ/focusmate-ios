//
// ListDTO.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public struct ListDTO: Codable, JSONEncodable, Hashable {
    public enum Role: String, Codable, CaseIterable {
        case owner
        case editor
        case viewer
    }

    public var id: Int
    public var name: String
    public var description: String?
    public var owner: UserDTO
    public var role: Role
    public var sharedWithCoaches: [CoachShare]?
    public var tasksCount: Int
    public var overdueTasksCount: Int
    public var createdAt: Date
    public var updatedAt: Date

    public init(id: Int, name: String, description: String? = nil, owner: UserDTO, role: Role, sharedWithCoaches: [CoachShare]? = nil, tasksCount: Int, overdueTasksCount: Int, createdAt: Date, updatedAt: Date) {
        self.id = id
        self.name = name
        self.description = description
        self.owner = owner
        self.role = role
        self.sharedWithCoaches = sharedWithCoaches
        self.tasksCount = tasksCount
        self.overdueTasksCount = overdueTasksCount
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case description
        case owner
        case role
        case sharedWithCoaches
        case tasksCount
        case overdueTasksCount
        case createdAt
        case updatedAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encode(owner, forKey: .owner)
        try container.encode(role, forKey: .role)
        try container.encodeIfPresent(sharedWithCoaches, forKey: .sharedWithCoaches)
        try container.encode(tasksCount, forKey: .tasksCount)
        try container.encode(overdueTasksCount, forKey: .overdueTasksCount)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(updatedAt, forKey: .updatedAt)
    }
}

@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ListDTO: Identifiable {}
