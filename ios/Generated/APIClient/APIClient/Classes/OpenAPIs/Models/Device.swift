//
// Device.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public struct Device: Codable, JSONEncodable, Hashable {
    public var id: Int
    public var deviceId: String
    public var platform: String
    public var appVersion: String?
    public var pushToken: String?
    public var createdAt: Date
    public var updatedAt: Date

    public init(id: Int, deviceId: String, platform: String, appVersion: String? = nil, pushToken: String? = nil, createdAt: Date, updatedAt: Date) {
        self.id = id
        self.deviceId = deviceId
        self.platform = platform
        self.appVersion = appVersion
        self.pushToken = pushToken
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case deviceId = "device_id"
        case platform
        case appVersion = "app_version"
        case pushToken = "push_token"
        case createdAt = "created_at"
        case updatedAt = "updated_at"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(deviceId, forKey: .deviceId)
        try container.encode(platform, forKey: .platform)
        try container.encodeIfPresent(appVersion, forKey: .appVersion)
        try container.encodeIfPresent(pushToken, forKey: .pushToken)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(updatedAt, forKey: .updatedAt)
    }
}

@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension Device: Identifiable {}
