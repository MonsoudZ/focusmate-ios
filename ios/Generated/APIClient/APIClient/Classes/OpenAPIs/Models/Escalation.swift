//
// Escalation.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public struct Escalation: Codable, JSONEncodable, Hashable {
    public var id: Int
    public var level: String
    public var notificationCount: Int
    public var blockingApp: Bool
    public var coachesNotified: Bool
    public var becameOverdueAt: Date?
    public var lastNotificationAt: Date?

    public init(id: Int, level: String, notificationCount: Int, blockingApp: Bool, coachesNotified: Bool, becameOverdueAt: Date? = nil, lastNotificationAt: Date? = nil) {
        self.id = id
        self.level = level
        self.notificationCount = notificationCount
        self.blockingApp = blockingApp
        self.coachesNotified = coachesNotified
        self.becameOverdueAt = becameOverdueAt
        self.lastNotificationAt = lastNotificationAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case level
        case notificationCount = "notification_count"
        case blockingApp = "blocking_app"
        case coachesNotified = "coaches_notified"
        case becameOverdueAt = "became_overdue_at"
        case lastNotificationAt = "last_notification_at"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(level, forKey: .level)
        try container.encode(notificationCount, forKey: .notificationCount)
        try container.encode(blockingApp, forKey: .blockingApp)
        try container.encode(coachesNotified, forKey: .coachesNotified)
        try container.encodeIfPresent(becameOverdueAt, forKey: .becameOverdueAt)
        try container.encodeIfPresent(lastNotificationAt, forKey: .lastNotificationAt)
    }
}

@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension Escalation: Identifiable {}
