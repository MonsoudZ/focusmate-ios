//
// ListShare.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public struct ListShare: Codable, JSONEncodable, Hashable {
    public enum Role: String, Codable, CaseIterable {
        case viewer
        case editor
        case admin
    }

    public var id: Int
    public var listId: Int
    public var userId: Int
    public var role: Role
    public var createdAt: Date
    public var updatedAt: Date
    public var user: UserDTO?

    public init(id: Int, listId: Int, userId: Int, role: Role, createdAt: Date, updatedAt: Date, user: UserDTO? = nil) {
        self.id = id
        self.listId = listId
        self.userId = userId
        self.role = role
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.user = user
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case listId = "list_id"
        case userId = "user_id"
        case role
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case user
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(listId, forKey: .listId)
        try container.encode(userId, forKey: .userId)
        try container.encode(role, forKey: .role)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(updatedAt, forKey: .updatedAt)
        try container.encodeIfPresent(user, forKey: .user)
    }
}

@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ListShare: Identifiable {}
